nameOverride: ""
fullnameOverride: ""

# extraImagePullSecrets:
#   - name: extra-pull-secret

positionSource:
  image:
    repository: starwitorg/sae-position-source
    tag: 1.1.1
  enabled: false
  settingsYaml:
    log_level: INFO
    position_source:                          # static source outputs the same coordinates twice a second
      type: static
      lat: 52
      lon: 10
    # position_source:                        # command source tries to read NMEA sentences from stdout of given command (this is recommended)
    #   type: command
    #   command: ["gpspipe", "-r"]            # this is passed to Popen; if you want to use a bash pipeline do ["bash", "-c", "command | command2"]
    # position_source:                        # dynamic source tries to read NMEA sentences from given serial device (i.e. USB gps receiver)
    #   type: dynamic
    #   serial_device: /dev/ttyACM0
  gpsdSidecar:
    enabled: false                            # only enable if non-static config above
    image:
      repository: starwitorg/sae-gpsd
      tag: 2025-09-10
    hostGpsDevice: /path/to/gpsdevice         # the path to a character device gpsd can use (e.g. /dev/ttyACM0) (is passed to hostPath volume mount)
    entrypointSh: |
      sleep 3600

videoSource:
  image: 
    repository: starwitorg/sae-video-source-py
    tag: 2.3.1
  settingsYamls:
  - id: stream1
    uri: 'uri'
    log_level: INFO

objectDetector:
  image:
    repository: starwitorg/sae-object-detector
    tag: 4.1.0
  customWeights: 
    enabled: false
    imageTag: weights-image-tag
  settingsYaml:
    log_level: INFO
    model:
      weights_path: yolov8n.pt
      device: cpu
      nms_agnostic: false
      inference_size: [ 640, 640 ]
      classes: null
    drop_edge_detections: false
    redis:
      stream_ids:
        - stream1

objectTracker:
  image:
    repository: starwitorg/sae-object-tracker
    tag: 3.3.0
  enabled: true
  needsGpu: false
  streamIds:
    - stream1
  settingsYaml:
    log_level: INFO
    tracker_algorithm: OCSORT
    tracker_config:
      det_thresh: 0.2
      max_age: 30
      min_hits: 3
      asso_threshold: 0.3
      delta_t: 3
      asso_func: 'iou'
      inertia: 0.2
      use_byte: false
      Q_xy_scaling: 1
      Q_s_scaling: 1

geoMapper:
  image:
    repository: starwitorg/sae-geo-mapper
    tag: 0.10.0
  enabled: false
  settingsYaml:
    log_level: INFO
    cameras:                  
      - stream_id: stream1    
        passthrough: false    
        view_x_deg: 90        
        image_width_px: 1920
        image_height_px: 1080
        elevation_m: 10       
        tilt_deg: 45          
        pos_lat: 52           
        pos_lon: 10           
        heading_deg: 90       
        brown_distortion_k1: 0
        brown_distortion_k2: 0
        brown_distortion_k3: 0

detectionAggregator:
  image:
    repository: starwitorg/detection-aggregator
    tag: 0.2.7
  enabled: false
  settingsYaml:
    log_level: INFO
    chunk:
      buffer_size: 1
      time_in_ms: 20
      geo_coordinate:
        latitude: 0
        longitude: 0

aiControl:
  image:
    repository: starwitorg/sae-ai-control
    tag: 0.2.7
  enabled: false
  settingsYaml:
    log_level: INFO
    time_past: 1d

redisWriter:
  image:
    repository: starwitorg/sae-redis-writer
    tag: 2.0.2
  enabled: false
  instances:
    - name: output1
      settingsYaml:
        log_level: INFO
        target_redis:
          host: host
          port: 6379
          buffer_length: 10
          target_stream_maxlen: 100
          tls: false
        mapping_config:
          - source: geomapper:stream1
            target: geomapper:mysae1

databaseWriter:
  image:
    repository: starwitorg/sae-database-writer
    tag: 2.0.0
  enabled: false
  config:
    redisStreamIds:
      - stream1
    db:
      jdbcUrl: jdbc:postgresql://host:port/
      schema: schema
      username: username
      password: password
      hypertable: tablename

redis:
  architecture: standalone
  auth:
    enabled: false
  commonConfiguration: |-
    save ""
    appendonly no
  master:
    persistence:
      enabled: false
    resources:
      limits:
        memory: 512Mi
        cpu: 500m
      requests:
        memory: 256Mi
        cpu: 250m
  metrics:
    enabled: true

prometheus:
  alertmanager:
    enabled: false
  server:
    service:
      type: ClusterIP
    scrapeInterval: 10s
    evaluationInterval: 10s
    extraScrapeConfigs:
      - job_name: redis_exporter
        static_configs:
          - targets: ['{{ include "sae.redisMetricsServiceName" $ }}:9121']
      - job_name: node_exporter
        static_configs:
          - targets: ['{{ include "sae.nodeExporterServiceName" $ }}:9100']
      - job_name: sae_pods
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              own_namespace: true
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_sae_starwit_de_stage]
            action: keep
            regex: (video-source|object-detector|object-tracker|geo-mapper|redis-writer)
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_annotation_sae_starwit_de_stage]
            action: replace
            target_label: stage
          

grafana:
  admin:
    password: admin
  datasources:
    secretDefinition: 
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://{{ include "sae.prometheusServiceName" . }}


nodeexporter:
  enabled: true