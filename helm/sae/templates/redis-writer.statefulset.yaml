{{- with .Values.redisWriter }}
{{- if .enabled }}
{{- $imageRepo := required "image repository for redis-writer is required" .image.repository }}
{{- $imageTag := required "image tag for redis-writer is required" .image.tag }}
{{- $rootConfig := . }}
{{- range .instances -}}
{{- $instanceName := printf "redis-writer-%s" (lower .name) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sae.fullname" $ }}-{{ $instanceName }}
  labels:
    {{- include "sae.labels" $ | nindent 4 }}
    app.kubernetes.io/component: redis-writer
spec:
  selector:
    matchLabels:
      {{- include "sae.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $instanceName }}
  template:
    metadata:
      annotations:
        sae.starwit.de/stage: redis-writer
        sae.starwit.de/config-checksum: {{ include (print $.Template.BasePath "/redis-writer.configmap.yaml") $ | sha256sum }}
      labels:
        {{- include "sae.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $instanceName }}
    spec:
      serviceAccountName: {{ include "sae.serviceAccountName" $ }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-redis
          image: valkey/valkey:7.2.6-alpine
          command: ["sh", "-c", "while ! redis-cli -h {{ include "sae.redisServiceName" $ }} ping ; do echo \"$(date -Iseconds) - still waiting for redis\"; sleep 1; done"]
      containers:
        - name: {{ $instanceName }}
          securityContext:
            {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $imageRepo }}:{{ $imageTag }}"
          imagePullPolicy: IfNotPresent
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          env:
            - name: REDIS__HOST
              value: {{ include "sae.redisServiceName" $ }}
            - name: REDIS__PORT
              value: {{ include "sae.redisServicePort" $ }}
          ports:
            - name: prometheus
              containerPort: 8000
          volumeMounts:
            - name: config
              mountPath: /code/settings.yaml
              subPath: settings.yaml
      volumes:
        - name: config
          configMap:
            name: {{ $instanceName }}-config
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
